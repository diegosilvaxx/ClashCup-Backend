// <auto-generated />
using System;
using DevIO.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DevIO.Data.Migrations
{
    [DbContext(typeof(MeuDbContext))]
    [Migration("20210408155151_createBanco")]
    partial class createBanco
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("DevIO.Business.Models.Jogador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Celular")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("IdClash")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("PagamentoId")
                        .HasColumnType("char(36)");

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Jogadores");
                });

            modelBuilder.Entity("DevIO.Business.Models.Pagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FormaPagamento")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("IdClash")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("JogadorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("TorneioId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("JogadorId");

                    b.HasIndex("TorneioId");

                    b.ToTable("Pagamentos");
                });

            modelBuilder.Entity("DevIO.Business.Models.Ranking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("IdClash")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Vitoria")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rankings");
                });

            modelBuilder.Entity("DevIO.Business.Models.Torneio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataTorneio")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Excluido")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("HorarioAbertura")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("HorarioInicio")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NomeTorneio")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Senha")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ValorTorneio")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Torneios");
                });

            modelBuilder.Entity("DevIO.Business.Models.Pagamento", b =>
                {
                    b.HasOne("DevIO.Business.Models.Jogador", "Jogador")
                        .WithMany("Pagamento")
                        .HasForeignKey("JogadorId")
                        .IsRequired();

                    b.HasOne("DevIO.Business.Models.Torneio", "Torneio")
                        .WithMany()
                        .HasForeignKey("TorneioId")
                        .IsRequired();

                    b.Navigation("Jogador");

                    b.Navigation("Torneio");
                });

            modelBuilder.Entity("DevIO.Business.Models.Jogador", b =>
                {
                    b.Navigation("Pagamento");
                });
#pragma warning restore 612, 618
        }
    }
}
